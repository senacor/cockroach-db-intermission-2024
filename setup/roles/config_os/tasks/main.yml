---
- name: pull cloud provider specific vars
  include_vars: "{{ cloud }}.yml"

- name: Run cloud provider specific tasks
  include_tasks: "cloud/{{ cloud }}.yml"

- name: pull os family specific vars
  include_vars: "{{ ansible_facts.os_family | lower }}.yml"

- name: Run os_family specific tasks
  include_tasks: "os_family/{{ ansible_facts.os_family | lower }}.yml"

- when: cloud != 'azure'
  block:
    - name: install chrony/ntp
      package:
        name: "{{ ntp_package_name }}"
        state: latest

    - name: Add the preferred Chrony/NTP server
      lineinfile:
        path: "{{ ntp_conf }}"
        line: "{{ ntp_server }}"

    - name: restart chronyd/ntp
      service:
        name: "{{ ntp_deamon }}"
        state: restarted

- name: Update VM swappiness
  sysctl:
    name: vm.swappiness
    value: "0"
    state: present
    reload: yes

- name: Set timezone to UTC
  shell: |
    timedatectl set-timezone UTC

- name: find attached disks bigger than 100GB
  shell: |
    lsblk -o NAME,TYPE,SIZE -p -n -b -s | \
      awk '$NF ~ /[1-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]/' | \
      grep -v '└─' | \
      grep disk | \
      awk '{print $1}'
  args:
    executable: /bin/bash
  register: _disks

- when: _disks.stdout_lines | length > 0
  block:
    - name: Create a ext4 filesystem
      ansible.builtin.shell: |
        mkfs.ext4 {{ item }}
      failed_when: result.rc != 0 and 'will not make a filesystem here!' not in result.stderr
      loop: "{{ _disks.stdout_lines }}"
      register: result